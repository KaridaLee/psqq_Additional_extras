# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Build with Gradle
      run: gradle build
      
    # 找出主JAR文件并提取文件名
    - name: Find main JAR file
      id: find-jar
      run: |
        JAR_FILE=$(find build/libs -name "*.jar" -not -name "*-sources.jar" -not -name "*-dev.jar" | head -n 1)
        echo "Found JAR file: $JAR_FILE"
        echo "jar_path=$JAR_FILE" >> $GITHUB_OUTPUT
        JAR_NAME=$(basename "$JAR_FILE")
        echo "jar_name=$JAR_NAME" >> $GITHUB_OUTPUT
        
    # 上传JAR文件作为构建产物，使用提取的文件名
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.find-jar.outputs.jar_name }}
        path: ${{ steps.find-jar.outputs.jar_path }}
        
    # 如果是标签推送，则创建Release并上传JAR文件
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.find-jar.outputs.jar_path }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
